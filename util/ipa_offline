#!/usr/bin/env python3

import http.client
import json
import os
import sys
import time
import urllib

def write_to_file(filename, data):
    with open(os.path.join(output_dir, filename), 'wb') as f:
        f.write(data)

def get_train_list(conn):
    conn.request('GET', '/api/trains')
    resp = conn.getresponse()
    if resp.status != 200:
        raise Exception('Got response %d %s' % (resp.status, resp.reason))
    return resp.read().decode()

def get_train(conn, train_name):
    req = '/api/trains/' + urllib.parse.quote_plus(train_name).replace('%2F', '/').replace('+', '%20')
    conn.request('GET', req)
    resp = conn.getresponse()
    if resp.status != 200:
        raise Exception('Got response %d %s' % (resp.status, resp.reason))
    return resp.read().decode()

def format_time(seconds):
    if seconds >= 60:
        return '%dm %ds' % (seconds / 60, seconds % 60)
    else:
        return '%ds' % seconds

def eta(i, total, start):
    elapsed = time.time() - start
    if i > 3 and i < total:
        left = total - i
        avg = elapsed / i
        eta = left * avg
        return 'Elapsed: %-10s ETA: %-10s' % (format_time(elapsed), format_time(eta))
    else:
        return ''


def get_trains(URL, output_dir):
    print('Connecting...')
    conn = http.client.HTTPConnection(URL)

    print('Getting train list...')
    trains = get_train_list(conn)
    train_list = json.loads(trains)['trains']
    write_to_file('trains', trains.encode())

    i = 0
    start = time.time()
    for train in train_list:
        train_name = train['train_name']
        print('[%4i/%4i] Getting %-50s %s' % (i, len(train_list), train_name, eta(i, len(train_list), start)))
        train = get_train(conn, train_name)
        train_file = os.path.join('train', train_name.replace('/', '_'))
        write_to_file(train_file, train.encode())
        i += 1

try:
    URL = sys.argv[1]
    output_dir = sys.argv[2]

    os.makedirs(os.path.join(output_dir, 'train'), exist_ok=True)

    get_trains(URL, output_dir)
except IndexError:
    print('ipa_offline URL output_directory')
    sys.exit(1)


